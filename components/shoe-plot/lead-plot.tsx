import dynamic from "next/dynamic";
import { useState } from "react";

const Plot = dynamic(() => import("react-plotly.js"), { ssr: false, })

export function WomensPlot(props) {
  const [isLoaded, setIsLoaded] = useState(false);

  return (
    <div className="h-[500px]">
      <Plot
        data={[
          {
            "type": "treemap",
            "level": "All",
            "ids": [
              "All",
              "",
              "Scarpa",
              "Drago",
              "Erin McNiece",
              "Jesse Pilz",
              "Oriane Bertone",
              "Molly Thompson-Smith",
              "Oceania Mackenzie",
              "Mia Krampl",
              "Zelia Avezou",
              "Lucia Doerffel",
              "Camilla Moroni",
              "Ievgeniia Kazbekova",
              "",
              "La Sportiva",
              "Theory",
              "Lauren Mukheibir",
              "Chae-hyun Seo",
              "Solution Comp",
              "Chae-hyun Seo*",
              "Solution",
              "Brooke Raboutou",
              "Skwama",
              "Brooke Raboutou*",
              "Zhang Yuetong",
              "Mandala",
              "Ai Mori",
              "",
              "Wild Climb",
              "Pantera",
              "Laura Rogora",
              "",
              "Unparallel",
              "Qubit",
              "Luo Zhilu",
              "",
              "Five Ten",
              "Hiangle Pro",
              "Janja Garnbret",
              "Natalia Grossman",
              "Aleon",
              "Miho Nonaka"
            ],
            "labels": [
              "All",
              "",
              "Scarpa",
              "Drago",
              "Erin McNiece",
              "Jesse Pilz",
              "Oriane Bertone",
              "Molly Thompson-Smith",
              "Oceania Mackenzie",
              "Mia Krampl",
              "Zelia Avezou",
              "Lucia Doerffel",
              "Camilla Moroni",
              "Ievgeniia Kazbekova",
              "",
              "La Sportiva",
              "Theory",
              "Lauren Mukheibir",
              "Chae-hyun Seo<sup>[4]</sup>",
              "Solution Comp",
              "Chae-hyun Seo<sup>[4]</sup>",
              "Solution",
              "Brooke Raboutou<sup>[3]</sup>",
              "Skwama",
              "Brooke Raboutou<sup>[3]</sup>",
              "Zhang Yuetong",
              "Mandala",
              "Ai Mori",
              "",
              "Wild Climb",
              "Pantera",
              "Laura Rogora",
              "",
              "Unparallel",
              "Qubit",
              "Luo Zhilu",
              "",
              "Five Ten",
              "Hiangle Pro",
              "Janja Garnbret<sup>[6]</sup>",
              "Natalia Grossman",
              "Aleon",
              "Miho Nonaka<sup>[5]</sup>"
            ],
            "values": [
              "22",
              "",
              "10",
              "10",
              "1",
              "1",
              "1",
              "1",
              "1",
              "1",
              "1",
              "1",
              "1",
              "1",
              "",
              "7",
              "2",
              "1",
              "1",
              "1",
              "1",
              "1",
              "1",
              "2",
              "1",
              "1",
              "1",
              "1",
              "",
              "1",
              "1",
              "1",
              "",
              "1",
              "1",
              "1",
              "",
              "3",
              "2",
              "1",
              "1",
              "1",
              "1"
            ],
            "parents": [
              "",
              "",
              "All",
              "Scarpa",
              "Drago",
              "Drago",
              "Drago",
              "Drago",
              "Drago",
              "Drago",
              "Drago",
              "Drago",
              "Drago",
              "Drago",
              "",
              "All",
              "La Sportiva",
              "Theory",
              "Theory",
              "La Sportiva",
              "Solution Comp",
              "La Sportiva",
              "Solution",
              "La Sportiva",
              "Skwama",
              "Skwama",
              "La Sportiva",
              "Mandala",
              "",
              "All",
              "Wild Climb",
              "Pantera",
              "",
              "All",
              "Unparallel",
              "Qubit",
              "",
              "All",
              "Five Ten",
              "Hiangle Pro",
              "Hiangle Pro",
              "Five Ten",
              "Aleon"
            ], marker: {
              colors: [
                "rgba(0, 0, 0, 0)",
                "",
                "rgb(102, 197, 204)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(246, 207, 113)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(146, 107, 113)",
                "",
                "",
                "",
                "rgb(220, 176, 242)",
                "",
                "",
                "",
                "rgb(248, 156, 116)",
              ],
            },
            "branchvalues": "total"
          }
        ]}
        layout={{
          margin: {
            t: 0,
            l: 0,
            b: 0,
            r: 0,
          },
          font: {
            color: "var(--mono12)"
          },
          height: 500,
        }}
        config={{
          displayModeBar: false,
          responsive: true,
          showTips: false
        }}
        style={{
          width: "100%",
          height: "500px",
          opacity: isLoaded ? 1 : 0,
          transition: "all 0.75s",
          transitionDelay: `${props.fadeDelay}s`
        }}
        onInitialized={() => setIsLoaded(true)}
      />
    </div>
  );
}